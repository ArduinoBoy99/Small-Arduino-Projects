#include <LiquidCrystal.h>
#include <TinyGPS++.h>
#include <SoftwareSerial.h>

static const int RXPin = 9, TXPin = 8;
static const uint32_t GPSBaud = 9600;
unsigned long tajmer = millis();

// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
// The TinyGPS++ object
TinyGPSPlus gps;
// The serial connection to the GPS device
SoftwareSerial ss(RXPin, TXPin);

void setup(){
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  Serial.begin(115200);
  ss.begin(GPSBaud);

  Serial.println(F("DeviceExample.ino"));
  Serial.println(F("A simple demonstration of TinyGPS++ with an attached GPS module"));
  Serial.print(F("Testing TinyGPS++ library v. ")); Serial.println(TinyGPSPlus::libraryVersion());
  Serial.println(F("by Mikal Hart"));
  Serial.println();
}

void loop(){
  // This sketch displays information every time a new sentence is correctly encoded.
  while (ss.available() > 0)
    if (gps.encode(ss.read()))
      displayInfo();
      if(millis() - tajmer >= 2500){
        lcdDisplayPosition();
        lcdDisplayTime();
        tajmer = millis();    
      }

  if (millis() > 5000 && gps.charsProcessed() < 10) {
    Serial.println(F("No GPS detected: check wiring."));
    while(true);
  }
}

void lcdDisplayPosition(){
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.write("LAT");
  lcd.print((gps.location.lat()),2);
  lcd.write("LNG");
  lcd.print((gps.location.lng()),2);
}

void lcdDisplayTime(){
  lcd.setCursor(0, 1);
  if (gps.time.hour() < 10) lcd.write("0");
  lcd.print((gps.time.hour()));
  lcd.write(":");
  if (gps.time.minute() < 10) lcd.write("0");
  lcd.print((gps.time.minute()));
  lcd.write(":");
  if (gps.time.second() < 10) lcd.write("0");
  lcd.print((gps.time.second()));
  lcd.write(".");
  if (gps.time.centisecond() < 10) lcd.write("0");
  lcd.print((gps.time.centisecond()));
}

void displayInfo(){
  Serial.print(F("Location: ")); 
  if (gps.location.isValid()){
    Serial.print(gps.location.lat(), 1);
    Serial.print(F(","));
    Serial.print(gps.location.lng(), 1);
  }
  else{
    Serial.print(F("INVALID"));
  }

  Serial.print(F("  Date/Time: "));
  if (gps.date.isValid()){
    Serial.print(gps.date.month());
    Serial.print(F("/"));
    Serial.print(gps.date.day());
    Serial.print(F("/"));
    Serial.print(gps.date.year());
  }
  else{
    Serial.print(F("INVALID"));
  }

  Serial.print(F(" "));
  if (gps.time.isValid()){
    if (gps.time.hour() < 10) Serial.print(F("0"));
    Serial.print(gps.time.hour());
    Serial.print(F(":"));
    if (gps.time.minute() < 10) Serial.print(F("0"));
    Serial.print(gps.time.minute());
    Serial.print(F(":"));
    if (gps.time.second() < 10) Serial.print(F("0"));
    Serial.print(gps.time.second());
    Serial.print(F("."));
    if (gps.time.centisecond() < 10) Serial.print(F("0"));
    Serial.print(gps.time.centisecond());
  }
  else{
    Serial.print(F("INVALID"));
  }
 Serial.println();
}
